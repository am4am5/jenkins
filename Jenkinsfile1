node('jenkins-jnlp') {
    env.MVN_HOME = "${tool 'Maven'}"
    env.PATH="${env.MVN_HOME}/bin:${env.PATH}"

    stage('Git') {
        echo "1.Get source code"
        checkout scm
        }
    }
    stage('Compile jar') {
        echo "2.Compile jar"
        sh "cd ./DynamicFormatSystem"
        sh "mvn clean package"
        sh "cp -f ./application/target/DynamicFormatSystem-0.0.1-SNAPSHOT.jar ./dfs.jar"
    }
    stage('Build Docker') {
        echo "3.Build Docker image"
        sh "docker build -t registry.nces.by/aismv/back/aismv-back-dfs:$BUILD_NUMBER -f Dockerfile_nces ."
        }
    stage('Push to Docker Registry') {
        echo "4.Push Docker image"
        withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'dockerhubPassword', usernameVariable: 'dockerhubUser')]) {
            sh "docker login -u ${dockerhubUser} -p ${dockerhubPassword}"
            sh "docker push 172.16.9.49:30020/aismv/back/aismv-back-dfs:$BUILD_NUMBER"
        }
    }
    stage('Deploy') {
        echo "5. Deploy To Kubernetes"
        sh "kubectl set image deployment/aismv-back-dfs aismv-back-dfs=registry.nces.by/aismv/back/aismv-back-dfs:$BUILD_NUMBER -n aismv --kubeconfig /opt/tomcat/.jenkins/nces.kube"
    }
    stage('Archive artifact') {
        echo "6. Archive artifact"
    archiveArtifacts artifacts: 'DynamicFormatSystem/application/target/DynamicFormatSystem-0.0.1-SNAPSHOT.jar', followSymlinks: false
    }
}
